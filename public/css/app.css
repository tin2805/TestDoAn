.chat-box {
  position: fixed;
  bottom: calc(-74vh + 50px);
  right: 20px;
  width: 22%;
  height: 74vh;
  background-color: #f4f4f4;
  border-radius: 6px;
}
.chat-box-header {
  background-color: #2662b6;
  color: white;
  border-radius: 6px 6px 0px 0px;
  text-align: center;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.chat-box-header img {
  margin-right: 10px;
}
.chat-box-header h3 {
  line-height: 50px;
  font-size: 16px;
  color: #fff;
}
.chat-box-header .chat-box-arrow-down,
.chat-box-header .chat-box-arrow-up {
  position: relative;
  padding: 5px;
  height: 25px;
  width: 25px;
  border-radius: 50%;
  transition: all 0.2s linear;
  margin-left: 5px;
}
.chat-box-header .chat-box-arrow-down::after,
.chat-box-header .chat-box-arrow-up::after {
  content: "";
  position: absolute;
  left: 7px;
  z-index: 11;
  display: block;
  width: 10px;
  height: 10px;
  border-top: 2px solid #fff;
  border-left: 2px solid #fff;
}
.chat-box-header .chat-box-arrow-up::after {
  top: 10px;
  transform: rotate(45deg);
}
.chat-box-header .chat-box-arrow-down::after {
  top: 5px;
  transform: rotate(225deg);
}
.chat-box-mess {
  overflow-y: auto;
  display: flex;
  align-items: center;
  flex-direction: column;
  max-height: 80%;
}
.chat-box-mess-text {
  position: relative;
  background-color: white;
  width: 80%;
  border-radius: 8px;
  padding: 12px;
  margin-top: 20px;
  height: -moz-min-content;
  height: min-content;
}
.chat-box-mess-text-chat {
  position: relative;
  background-color: #4599FF;
  width: 80%;
  border-radius: 8px;
  padding: 12px;
  margin-top: 20px;
  height: -moz-min-content;
  height: min-content;
}
.chat-box-btn-div {
  position: absolute;
  bottom: 15px;
  width: 100%;
  text-align: center;
  font-size: 14px;
}
.chat-box-btn-div-copy {
  background-color: #2662b6;
  color: white;
  border-radius: 6px;
  padding: 5px 20px;
  width: 50%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.chat-box-btn-div-copy img {
  margin-right: 5px;
}
.chat-box-btn-div-bottom {
  margin-top: 10px;
}
.chat-box-btn-div-bottom span {
  display: inline-block;
  cursor: pointer;
  width: 45%;
  border-radius: 8px;
  padding: 5px 20px;
  border: 1px solid #000;
}

.show_chatbox {
  transform: translateY(calc(-72vh + 30px));
  transition-duration: 0.8s;
  transition-timing-function: ease-in-out;
}

.hide_chatbox {
  transform: translateY(calc(-3vh + 30px));
  transition-duration: 0.8s;
  transition-timing-function: ease-in-out;
}

.bl_estimate_form_label_btn_gpt {
  color: #2662b6;
  padding: 8px 16px;
  border-radius: 4px;
  cursor: pointer;
  display: inline-flex;
  text-align: center;
  align-items: center;
  justify-content: center;
}
.bl_estimate_form_label_btn_gpt img {
  width: 20%;
  margin-right: 5px;
}

.chat-box-mess-text::before {
  content: "";
  display: block;
  width: 0;
  position: absolute;
  bottom: -10px;
  right: 8px;
  border-style: solid;
  border-width: 8px;
  border-color: #fff transparent transparent #fff;
  transform: rotate(90deg);
}

.chat-box-mess-text-chat::before {
  content: "";
  display: block;
  width: 0;
  position: absolute;
  bottom: -10px;
  left: 8px;
  border-style: solid;
  border-width: 8px;
  border-color: #4599FF transparent transparent #4599FF;
  transform: rotate(0deg);
}

.chat-box-mess-loading {
  width: 100%;
  display: flex;
  justify-content: flex-end;
}
.chat-box-mess-loading #loading-bubble {
  margin-right: 10%;
  margin-bottom: 20px;
  margin-top: 20px;
}

.spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 45px;
  height: 9px;
  margin-left: -22px;
  margin-top: -13px;
  text-align: center;
}

.spinner > div {
  width: 9px;
  height: 9px;
  background-color: #2e66bd;
  border-radius: 100%;
  display: inline-block;
  animation: bouncedelay 1400ms ease-in-out infinite;
  /* Prevent first frame from flickering when animation starts */
  animation-fill-mode: both;
}

.spinner .bounce1 {
  animation-delay: -0.32s;
}

.spinner .bounce2 {
  animation-delay: -0.16s;
}
@keyframes bouncedelay {
  0%, 80%, 100% {
    transform: scale(0);
    -webkit-transform: scale(0);
  }
  40% {
    transform: scale(1);
    -webkit-transform: scale(1);
  }
}
#container {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  display: flex;
  display: -ms-flexbox;
  justify-content: space-around;
  -webkit-justify-content: space-around;
  align-items: center;
  -webkit-align-items: center;
}

#loading-bubble {
  display: flex;
  display: -ms-flexbox;
  justify-content: center;
  -webkit-justify-content: center;
  align-items: center;
  -webkit-align-items: center;
  width: auto;
  height: auto;
  min-width: 73px;
  min-height: 40px;
  border-radius: 5px;
  box-sizing: border-box;
  position: relative;
  background-color: #fff;
  animation: message-bounce 2.5s ease-in-out infinite;
  animation-fill-mode: both;
}
#loading-bubble.grey {
  background-color: #a5b0b5;
}
#loading-bubble.grey:before {
  border-color: transparent #a5b0b5 transparent transparent;
}
#loading-bubble:before {
  display: block;
  content: " ";
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 8px;
  border-color: #fff transparent transparent #fff;
  position: absolute;
  transform: rotate(90deg);
  bottom: -6px;
  right: 4px;
}
#loading-bubble .spinner {
  position: static !important;
  margin-top: -11px;
  margin-left: 0px;
}
#loading-bubble .spinner div {
  background-color: #2e66bd;
}

@keyframes message-bounce {
  0% {
    transform: scale(0.9);
    -webkit-transform: scale(0.9);
  }
  50% {
    transform: scale(1.1);
    -webkit-transform: scale(1.1);
  }
  100% {
    transform: scale(0.9);
    -webkit-transform: scale(0.9);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/